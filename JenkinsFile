pipeline {
    agent none

    environment {
      AUTHOR = "Lutfi Dendiansyah"
      EMAIL = "lutfi@example.com"
    }

    stages {
        stage("Preparation") {
          agent {
            node {
              label "java11"
            }
          }

          steps {
            echo("Author: ${AUTHOR}") 
            echo("Email: ${EMAIL}") 
            echo("Start Job: ${env.JOB_NAME}") 
            echo("Start Build: ${env.BUILD_NUMBER}") 
            echo("Branch Name: ${env.BRANCH_NAME}") 
          }
        }

        stage("Hello") {
            agent {
              node {
                label "java11"
              }
            }

            steps {
                script {
                  for (int i = 1; i <= 10; i++) {
                    echo("Script ${i}")
                  }
                }

                echo("Start Build")
                bat("./mvnw clean compile test-compile")
                echo("Finish Build")
            }
        }

        stage("Test") {
            agent {
              node {
                label "java11"
              }
            }

            steps {
                script {
                  def data = [
                    "firstName": "Lutfi",
                    "lastName": "Dendiansyah"
                  ]
                  writeJSON(file: "data.json", json: data)
                }

                echo("Start Test")
                bat("./mvnw test")
                echo("Finish Test")
            }
        }

   
        stage("Deploy") {
            agent {
              node {
                label "java11"
              }
            }

            steps {
                echo "Hello Deploy 1"
                sleep(5)
                echo "Hello Deploy 2"
                echo "Hello Deploy 3"
            }
        }
    }

    post {
      always {
        echo "I will always say hello"
      }
      success {
        echo "Success"
      }
      failure {
        echo "Failure"
      }
      cleanup {
        echo "Don't care success or failure"
      }
    }
}